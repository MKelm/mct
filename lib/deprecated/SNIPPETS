// database initialization
mct.db = openDatabase('mctdb1', '1.0', 'mctdb1', 2 * 1024 * 1024);
var ts = baseUtilTime("unix");
mct.db.transaction(function (tx) {
  tx.executeSql('CREATE TABLE IF NOT EXISTS player (option unique, value)');
  tx.executeSql('INSERT INTO player (option, value) VALUES ("time", ?)', [ts]);
});
mct.db.transaction(function (tx) {
  tx.executeSql('UPDATE player SET value = ? WHERE option = "time"', [ts]);
});
tx.executeSql('SELECT * FROM foo', [], function (tx, results) {
  var len = results.rows.length, i;
  for (i = 0; i < len; i++) {
    alert(results.rows.item(i).text);
  }
});

// planet tween easing animation
var tween = new TWEEN.Tween( { x: planet.position.x, y: planet.position.x  } )
.to( { y: planet.position.y - 100, x: planet.position.x - 100 }, 10000 )
.easing( TWEEN.Easing.Elastic.InOut )
.onUpdate( function () {
    planet.position.x = this.x;
    planet.position.y = this.y;
} )
.start()
.delay(1000);

// prepare technology data for window
var technologyFieldsForTypeElements = [];
// the following var contains types for each field for single type
// it has to be an object, because the properties depend on the parameter (element handle) of the parent layer
// to get the right menu elements in the new layer
var technologyFieldTypesElements = {};
var technologyFieldsForTypesElements = [];
for (var fp in mct.data.technologies.fields) {
if (mct.data.technologies.fields[fp].companies.for == 'type') {
  technologyFieldsForTypeElements.push([fp, mct.data.technologies.fields[fp].title]);
  technologyFieldTypesElements[fp] = [];
  for (var tp in mct.data.technologies.fields[fp].types) {
    technologyFieldTypesElements[fp].push([tp, mct.data.technologies.fields[fp].types[tp].title]);
  }
} else {
  technologyFieldsForTypesElements.push([fp, mct.data.technologies.fields[fp].title]);
}
}

var technologyCompaniesElements = {};
for (var fp in mct.data.planets[mct.status.planet].companies.valid) {
if (typeof mct.data.planets[mct.status.planet].companies.valid[fp].length != "undefined") {
  technologyCompaniesElements[fp] = [];
  for (var i = 0; i < mct.data.planets[mct.status.planet].companies.valid[fp].length; i++) {
    technologyCompaniesElements[fp].push(
      [i, mct.data.planets[mct.status.planet].companies.valid[fp][i].name]
    );
  }
} else {
  technologyCompaniesElements[fp] = {};
  for (var tp in mct.data.planets[mct.status.planet].companies.valid[fp]) {
    technologyCompaniesElements[fp][tp] = [];
    for (var i = 0; i < mct.data.planets[mct.status.planet].companies.valid[fp][tp].length; i++) {
      technologyCompaniesElements[fp][tp].push(
        [i, mct.data.planets[mct.status.planet].companies.valid[fp][tp][i].name]
      );
    }
  }
}
}

// add planet companies window
displayWindowAdd(
'planetcompanies',
'planet/companies.json',
{}, // dynamic texts
{
  "technologyfieldsfortype" : technologyFieldsForTypeElements,
  "technologyfieldtypes" : technologyFieldTypesElements,
  "technologyfieldsfortypes" : technologyFieldsForTypesElements,
  "technologycompanies" : technologyCompaniesElements
} // dynamic menu / content elements
);
displayWindowLayer("planetcompanies", 0, "hardware", 1);
displayWindowLayer("planetcompanies", 1, "tel", 2);